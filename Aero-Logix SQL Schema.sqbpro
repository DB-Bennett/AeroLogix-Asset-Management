<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="Aero-Logix SQL Schema.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1813"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Assets" custom_title="0" dock_id="1" table="4,6:mainAssets"/><dock_state state="000000ff00000000fd0000000100000002000002480000020cfc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000002480000011e00ffffff000002480000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Assets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="53"/><column index="2" value="95"/><column index="3" value="191"/><column index="4" value="119"/><column index="5" value="63"/><column index="6" value="97"/><column index="7" value="70"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Locations" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="69"/><column index="2" value="95"/><column index="3" value="159"/><column index="4" value="95"/><column index="5" value="39"/><column index="6" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MaintenanceLogs" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="41"/><column index="2" value="54"/><column index="3" value="108"/><column index="4" value="183"/><column index="5" value="300"/><column index="6" value="35"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- This SQL schema is for the Aero-Logix asset management database.
-- It tracks assets, their locations, and a log of maintenance activities.

-- Create the Locations table to store information about where assets are held.
CREATE TABLE Locations (
    LocationID INT PRIMARY KEY,
    LocationName VARCHAR(255) NOT NULL,
    Address VARCHAR(255),
    City VARCHAR(255),
    State VARCHAR(255),
    ZipCode VARCHAR(10)
);

-- Create the Assets table to store all information about each piece of equipment.
-- It links to the Locations table using a foreign key.
CREATE TABLE Assets (
    AssetID INT PRIMARY KEY,
    AssetTag VARCHAR(50) UNIQUE NOT NULL,
    ItemDescription VARCHAR(255) NOT NULL,
    SerialNumber VARCHAR(50) UNIQUE NOT NULL,
    Condition VARCHAR(50),
    AcquisitionDate DATE,
    LocationID INT,
    FOREIGN KEY (LocationID) REFERENCES Locations(LocationID)
);

-- Create the MaintenanceLogs table to track all maintenance activities for assets.
-- It links to the Assets table using a foreign key.
CREATE TABLE MaintenanceLogs (
    LogID INT PRIMARY KEY,
    AssetID INT,
    MaintenanceDate DATE NOT NULL,
    MaintenanceType VARCHAR(100),
    Details TEXT,
    Cost DECIMAL(10, 2),
    FOREIGN KEY (AssetID) REFERENCES Assets(AssetID)
);

-- Example INSERT statements to populate the tables with data.

-- Add data to the Locations table
INSERT INTO Locations (LocationID, LocationName, Address, City, State, ZipCode) VALUES
(101, 'Warehouse A', '456 Tech Drive', 'Austin', 'TX', '78701'),
(102, 'Warehouse B', '789 Industrial Blvd', 'Dallas', 'TX', '75201'),
(103, 'Warehouse C', '101 Server St', 'Houston', 'TX', '77001'),
(104, 'Warehouse D', '505 Logistics Ave', 'San Antonio', 'TX', '78201');

-- Add data to the Assets table
INSERT INTO Assets (AssetID, AssetTag, ItemDescription, SerialNumber, Condition, AcquisitionDate, LocationID) VALUES
(1, 'PEGASUS-001', 'Server Rack', 'SVR-PEG-00123', 'Used', '2025-06-15', 101),
(2, 'PEGASUS-002', 'Fiber Optic Cable Spool', 'FOC-PEG-00456', 'New', '2025-06-15', 101),
(3, 'PEGASUS-003', 'Network Switch', 'NWS-PEG-00789', 'Damaged', '2025-06-15', 102),
(4, 'PEGASUS-004', 'Encryption Device', 'ENC-PEG-01011', 'Used', '2025-06-15', 103),
(5, 'PEGASUS-005', 'Server Unit', 'SRV-PEG-01213', 'New', '2025-06-15', 102),
(6, 'PEGASUS-006', 'Router Device', 'RAD-PEG-00667', 'New', '2025-07-20', 103),
(7, 'PEGASUS-007', 'Desktop PC', 'PC-PEG-00777', 'Used', '2025-07-25', 104),
(8, 'PEGASUS-008', 'Barcode Scanner', 'SCAN-PEG-00888', 'New', '2025-07-25', 104),
(9, 'PEGASUS-009', 'Hard Drive Array', 'HDA-PEG-00999', 'Used', '2025-08-01', 101);

-- Add data to the MaintenanceLogs table
INSERT INTO MaintenanceLogs (LogID, AssetID, MaintenanceDate, MaintenanceType, Details, Cost) VALUES
(1, 1, '2025-07-25', 'General Inspection', 'Checked all connections and integrity.', 0.00),
(2, 3, '2025-07-28', 'Repair', 'Replaced damaged port due to user error.', 150.00),
(3, 7, '2025-08-05', 'Preventive Maintenance', 'Ran diagnostics and updated software.', 50.00),
(4, 9, '2025-08-08', 'Repair', 'Replaced a failed drive.', 350.00);

-- Example SQL Queries for analysis.

-- What is the total count of assets in &quot;Warehouse A&quot;?
SELECT COUNT(*) FROM Assets
WHERE LocationID = 101;

-- Find all assets whose condition is listed as &quot;Used&quot; or &quot;Damaged&quot;.
SELECT * FROM Assets
WHERE Condition = 'Used' OR Condition = 'Damaged';

-- Find all assets and their corresponding locations.
SELECT A.AssetTag, A.ItemDescription, L.LocationName
FROM Assets AS A
JOIN Locations AS L
ON A.LocationID = L.LocationID;

-- Find all assets with an associated maintenance log and their maintenance costs.
SELECT A.AssetTag, A.ItemDescription, M.MaintenanceDate, M.Cost
FROM Assets AS A
JOIN MaintenanceLogs AS M
ON A.AssetID = M.AssetID;
</sql><sql name="&amp;Quick Integrity Check*">PRAGMA quick_check;</sql><current_tab id="1"/></tab_sql></sqlb_project>
